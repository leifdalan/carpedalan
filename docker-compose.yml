version: '2.3'

services:
  alb:
    container_name: c_alb
    depends_on:
      app: 
        condition: service_healthy
    image: ekino/nginx-brotli:latest-1.12.2-bfd2885
    restart: always
    volumes: 
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/local.carpedalan.com.pem:/etc/ssl/certs/local.carpedalan.com.pem
      - ./nginx/local.carpedalan.com-key.pem:/etc/ssl/private/local.carpedalan.com-key.pem
    ports:
      - 80:80
      - 443:443

    
  app:
    container_name: app
    depends_on:
      pg:
        condition: service_healthy
    tty: true
    build:
      context: .
      target: dev
    volumes:
      - ./src:/app/src:delegated
      - ./nodemon.json:/app/nodemon.json:delegated
      - ./server:/app/server:delegated
      - ./api:/app/api:delegated
      - ./scripts:/app/scripts:delegated
      - ./db:/app/db:delegated
      - ./shared:/app/shared:delegated
      - ./api-v1:/app/api-v1:delegated
      - ./goodDataWithEtagAndKey.json:/app/goodDataWithEtagAndKey.json
      - ./.env-local:/app/.env
      - ./public:/app/public
      - ./webpack.config.js:/app/webpack.config.js
    ports:
      - 3001:80
      - 9227:9229
    environment:
      PORT: 80
    command: yarn migrateAndStart
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:80/login || exit 1"]
      interval: 1s
      timeout: 1s
      retries: 40

  pg:
    image: postgres:10.0-alpine
    container_name: pg
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 20

  pg_test:
    # logging: 
    #   driver: "none"
    image: postgres:10.0-alpine
    container_name: test
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - "5555:5432"
    # command: '-p 5555'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 1s
      timeout: 1s
      retries: 20

  pg_migrate:
    logging: 
      driver: "none"
    container_name: migrate
    environment: 
      NODE_ENV: test
      MIGRATING: 'true'
      PG_HOST: pg_test
      PG_PORT: 5432
    depends_on:
      pg_test:
        condition: service_healthy
    tty: true
    volumes:
      - ./db:/app/db:delegated
      - ./shared:/app/shared:delegated
    build:
      context: .
      target: dev
    command: yarn migrate
