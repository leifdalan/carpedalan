worker_processes 4;

events { worker_connections 1024; }

http { 
    log_format custom '$request $status';
    access_log  /var/log/nginx/access.log custom;
    upstream node-app {
        server web:8000 weight=1 max_fails=3 fail_timeout=30s;
    }


    server {
        listen 80;
        client_max_body_size 500M;
        fastcgi_read_timeout 300;
        location /healthcheck {
            access_log off;
            log_not_found off;
            expires max;
            add_header Pragma public;
            add_header Cache-Control "public";
            add_header Vary "Accept-Encoding";
            return 200 "healthy";
        }        

        location / {
            
            brotli              on;
            brotli_comp_level   6;
            brotli_static       on;
            brotli_types text/plain application/javascript application/x-javascript text/javascript text/xml text/css text/html application/json  application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;
            # gzip on;
            # gzip_types    

            add_header X-Super-Power "GZipped With brotli";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-Proto $scheme; 
            proxy_pass http://node-app;
        }

    }

}